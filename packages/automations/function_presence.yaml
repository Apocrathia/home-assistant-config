### Presence Detection Functionality ###

group:
################################################################################
  vacation_settings:
    name: Vacation
    control: hidden
    entities:
      - input_boolean.vacation_ian
      - input_boolean.vacation_aimee
################################################################################
  network_phones:
    name: Phones
    entities:
      - device_tracker.network_aimees_iphone
      - device_tracker.network_ians_iphone
################################################################################
  people:
    name: People
    entities:
      - person.ian
      - person.aimee
################################################################################

# The Bayesian sensor has been a real bitch to wrap my head around.
# One extremely valuable resource has been robmarkcole's Jupityr notebook.
# http://nbviewer.jupyter.org/github/robmarkcole/HASS-data-science/blob/master/Bayesian%20sensor%20tutorial.ipynb

# binary_sensor:
# ################################################################################
#   - platform: bayesian
#     prior: 0.00 # The initial probability that the house is empty
#     name: 'Occupancy'
#     probability_threshold: 0.5
#     observations:
#       - entity_id: person.ian
#         prob_given_true: 1.0
#         prob_given_false: 0.0
#         platform: 'state'
#         to_state: 'home'
#       - entity_id: person.aimee
#         prob_given_true: 1.0
#         prob_given_false: 0.0
#         platform: 'state'
#         to_state: 'home'
# ################################################################################

input_boolean:
################################################################################
  vacation_ian:
    name: 'Vacation - Ian'
    initial: off
    icon: mdi:beach
  vacation_aimee:
    name: 'Vacation - Aimee'
    initial: off
    icon: mdi:beach
  away_mode:
    name: Away Mode
    initial: off
    icon: mdi:walk
################################################################################

automation:
################################################################################
# I realize the input boolean seems redundant, but I wanted a simply switch that
# I could hit in case I wanted to activate an Away Mode, as well as something
# that could be accessed externally by Node-RED.
  - id: function_presence_detection
    alias: "Function - Presence Detection"
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: group.people
    action:
      service_template: >
        {% if is_state('group.people', 'home') %}
          input_boolean.turn_off
        {% elif is_state('group.people', 'not_home') %}
          input_boolean.turn_on
        {% endif %}
      entity_id: input_boolean.away_mode
################################################################################
  - id: function_presence_scripts
    alias: "Function - Presence Scripts"
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.away_mode
    action:
      service_template: >
        {% if is_state('input_boolean.away_mode', 'off') %}
          script.location_home
        {% elif is_state('input_boolean.away_mode', 'on') %}
          script.location_away
        {% endif %}
################################################################################
  - id: function_vacation_departure
    alias: "Function - Vacation - Departure"
    initial_state: 'off'
    trigger:
      - platform: numeric_state
        entity_id:
          - person.aimee
          - person.ian
        value_template: >
          {{ distance('zone.home', 'trigger.event.data') | round }} 
        above: 100
        for: "01:00:00"
    action:
      service_template: >
        {% if trigger.entity_id == 'person.aimee' %}
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.vacation_aimee
        {% elif trigger.entity_id == 'person.ian' %}
          - service: input_boolean.turn_on
            data:
              entity_id: input_boolean.vacation_ian
        {% endif %}
################################################################################
  - id: function_vacation_return
    alias: "Function - Vacation - Return"
    initial_state: 'off'
    trigger:
      - platform: numeric_state
        entity_id:
          - person.aimee
          - person.ian
        value_template: >
          {{ distance('zone.home', 'trigger.event.data') | round }} 
        below: 100
        for: "01:00:00"
    action:
      service_template: >
        {% if trigger.entity_id == 'person.aimee' %}
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.vacation_aimee
        {% elif trigger.entity_id == 'person.ian' %}
          - service: input_boolean.turn_off
            data:
              entity_id: input_boolean.vacation_ian
        {% endif %}
################################################################################

# Scripts
script:
################################################################################
  location_away:
    alias: 'Function - Presence - Away'
    sequence:
      # Turn off all of the lights
    - service: light.turn_off
      data:
        entity_id: group.indoor_lights
      # Set the thermostats to away
    - service: climate.set_preset_mode
      data:
        entity_id: 
          - climate.ecobee_downstairs
          - climate.ecobee_upstairs
        preset_mode: 'away'
      # Start the vacuum
    - service: vacuum.start
      data:
        entity_id: 
          - vacuum.downstairs_vacuum
          #- vacuum.upstairs_vacuum
      # Arm the alarm
    - service: alarm_control_panel.alarm_arm_away
      data:
        entity_id: alarm_control_panel.home
        code: !secret alarm_code
      # Ensure the doors are locked
    - service: lock.lock
      data:
        entity_id: group.all_locks
      # Turn off the lights
    - service: scene.turn_on
      data:
        entity_id: scene.away
      # Lights will now be randomly turned on and off
      # and is triggered by input_boolean.away_mode
################################################################################
  location_home:
    alias: 'Function - Presence - Home'
    sequence:
      # Set the thermostat to home
    - service: climate.set_preset_mode
      data:
        entity_id: 
          - climate.ecobee_downstairs
          - climate.ecobee_upstairs
        preset_mode: 'home'
      # Stop the vacuum
    - service: vacuum.return_to_base
      data:
        entity_id: 
          - vacuum.downstairs_vacuum
          #- vacuum.upstairs_vacuum
      # Disarm the alarm
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.home
        code: !secret alarm_code
      # Turn on some lights
    - service: scene.turn_on
      data:
        entity_id: scene.home
################################################################################

# Scenes
scene:
################################################################################
  - name: Home
    entities:
      light.dining_room_chandelier:
        state: on
        brightness: 100
      light.kitchen_chandelier:
        state: on
        brightness: 100
      light.sitting_room_floor_lamp:
        state: on
        brightness: 100
################################################################################
  - name: Away
    entities:
      light.dining_room_chandelier:
        state: off
      light.kitchen_chandelier:
        state: off
      light.sitting_room_floor_lamp:
        state: off
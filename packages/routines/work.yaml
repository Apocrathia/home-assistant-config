---
### Work ###

# Inputs
input_datetime:
  routine_work_start:
    name: Routine - Work - Start
    has_date: false
    has_time: true
  routine_work_stop:
    name: Routine - Work - Stop
    has_date: false
    has_time: true

input_boolean:
  routine_work_friday:
    name: Routine - Work - Friday

# Sensors
binary_sensor:
  - platform: template
    sensors:
      routine_work_active:
        friendly_name: Routine - Work - Active
        value_template: >
          {{ is_state('schedule.routine_work_schedule', 'on') and
          is_state('binary_sensor.workday', 'on') }}

  # These sensors are defined in integrations/sensor.yaml
  # Configuration is show here for reference
  # # Workday
  # - platform: workday
  #   name: workday
  #   country: US

  # # Worknight
  # - platform: workday
  #   name: worknight
  #   country: US
  #   days_offset: 1

# Work Schedule
schedule:
  routine_work_schedule:
    name: Routine - Work - Schedule
    monday:
      - from: '09:00:00'
        to: '15:00:00'
    tuesday:
      - from: '09:00:00'
        to: '15:00:00'
    wednesday:
      - from: '09:00:00'
        to: '15:00:00'
    thursday:
      - from: '09:00:00'
        to: '15:00:00'
    friday:
      - from: '09:00:00'
        to: '15:00:00'

# Automations
automation:
  ###############################################################################
  - id: routine_work_mornings
    alias: Routine - Work - Morning
    trigger:
      - platform: time
        at: '05:00:00'
    condition:
      - alias: 'Ian is home'
        condition: state
        entity_id: person.ian
        state: 'home'
      - alias: 'Only on workdays'
        condition: state
        entity_id: binary_sensor.workday
        state: 'on'
    action:
      - alias: 'Raise desk to standing position'
        service: button.press
        target:
          entity_id: button.office_desk_controller_preset_1
  ###############################################################################
  - id: routine_work_meetings
    alias: Routine - Work - Meetings
    trigger:
      - platform: state
        entity_id: !secret google_work_calendar_entity_id
    condition:
      - alias: 'Ian is home'
        condition: state
        entity_id: person.ian
        state: 'home'
      - alias: 'Only on workdays'
        condition: state
        entity_id: binary_sensor.workday
        state: 'on'
      - alias: 'Only during work hours'
        condition: state
        entity_id: binary_sensor.routine_work_active
        state: 'on'
    action:
      - alias: 'Status handler'
        choose:
          - conditions:
              - condition: and
                conditions:
                  - alias: 'Meeting Started'
                    condition: state
                    entity_id: !secret google_work_calendar_entity_id
                    state: 'on'
                  - alias: 'During work hours'
                    condition: state
                    entity_id: binary_sensor.routine_work_active
                    state: 'on'
            sequence:
              - alias: 'Turn on camera lights'
                service: light.turn_on
                target:
                  entity_id:
                    - light.office_camera_lights
              - alias: 'Set microphone lights'
                service: light.turn_on
                target:
                  entity_id: light.office_microphone_light_red
              - alias: 'Set microphone lights'
                service: light.turn_off
                target:
                  entity_id: light.office_microphone_light_blue
              - alias: 'Set doorbell message'
                service: select.select_option
                data:
                  entity_id: select.front_door_camera_doorbell_text
                  option: In Meeting
          - conditions:
              - condition: and
                conditions:
                  - alias: 'Meeting Ended'
                    condition: state
                    entity_id: !secret google_work_calendar_entity_id
                    state: 'off'
                  - alias: 'During work hours'
                    condition: state
                    entity_id: binary_sensor.routine_work_active
                    state: 'on'
            sequence:
              - alias: 'Turn on camera lights'
                service: light.turn_off
                target:
                  entity_id:
                    - light.office_camera_lights
              - alias: 'Set microphone lights'
                service: light.turn_on
                target:
                  entity_id: light.office_microphone_light_blue
              - alias: 'Set microphone lights'
                service: light.turn_off
                target:
                  entity_id: light.office_microphone_light_red
              - alias: 'Set doorbell message'
                service: select.select_option
                data:
                  entity_id: select.front_door_camera_doorbell_text
                  option: Go Away
  ###############################################################################
  - id: routine_work_start
    alias: Routine - Work - Start
    trigger:
      - platform: time
        at: input_datetime.routine_work_start
      - platform: state
        entity_id: schedule.routine_work_schedule
        to: 'on'
    condition:
      - alias: 'Ian is home'
        condition: state
        entity_id: person.ian
        state: 'home'
      - alias: 'Only on workdays'
        condition: state
        entity_id: binary_sensor.workday
        state: 'on'
      - alias: 'Only during work hours'
        condition: state
        entity_id: binary_sensor.routine_work_active
        state: 'on'
    action:
      - alias: 'Turn on office lights'
        service: light.turn_on
        target:
          entity_id:
            - light.office_floor_lamp
            - light.office_stream_lights
            - light.office_microphone_light_blue
      - delay: 00:00:05
      # This should already be on from the morning routine
      - alias: 'Set brightness for office floor lamp'
        service: light.turn_on
        target:
          entity_id: light.office_floor_lamp
        data:
          brightness: 100%
      # If a vacuum is docked but has a pending task, it needs to be started first.
      - alias: 'Start the vacuums'
        service: vacuum.start
        target:
          entity_id:
            - vacuum.downstairs
            - vacuum.upstairs
      # Give the vacuum enough time to get off the dock
      - delay: 00:00:15
      # Now stop it
      - alias: 'Stop the vacuums'
        service: vacuum.stop
        target:
          entity_id:
            - vacuum.downstairs
            - vacuum.upstairs
      - delay: 00:00:05
      # And send it home
      - alias: 'Return vacuums to docks'
        service: vacuum.return_to_base
        target:
          entity_id:
            - vacuum.downstairs
            - vacuum.upstairs
  ###############################################################################
  - id: routine_work_break
    alias: Routine - Work - Break
    trigger:
      - platform: state
        entity_id: input_boolean.away_mode
    condition:
      - alias: 'Only on workdays'
        condition: state
        entity_id: binary_sensor.workday
        state: 'on'
      - alias: 'During Work Hours'
        condition: state
        entity_id: binary_sensor.routine_work_active
        state: 'on'
    action:
      - alias: 'State Handler'
        choose:
          - conditions:
              - alias: 'Left the house'
                condition: state
                entity_id: input_boolean.away_mode
                state: 'on'
            sequence:
              - alias: 'Turn off office lights'
                service: light.turn_off
                target:
                  entity_id:
                    - light.office_stream_lights
                    - light.office_microphone_light_blue
                    - light.office_microphone_light_red
          - conditions:
              - alias: 'Returned'
                condition: state
                entity_id: input_boolean.away_mode
                state: 'off'
            sequence:
              - alias: 'Turn on office lights'
                service: light.turn_on
                target:
                  entity_id:
                    - light.office_stream_lights
                    - light.office_microphone_light_blue
  ###############################################################################
  - id: routine_work_stop
    alias: Routine - Work - Stop
    trigger:
      - platform: time
        at: input_datetime.routine_work_stop
      - platform: state
        entity_id: schedule.routine_work_schedule
        to: 'off'
    condition:
      - alias: 'Ian is home'
        condition: state
        entity_id: person.ian
        state: 'home'
      - alias: 'Only on workdays'
        condition: state
        entity_id: binary_sensor.workday
        state: 'on'
      - alias: 'During Work Hours'
        condition: state
        entity_id: binary_sensor.routine_work_active
        state: 'on'
    action:
      - alias: 'Turn off office lights'
        service: light.turn_off
        target:
          entity_id:
            - light.office_floor_lamp
            - light.office_stream_lights
            - light.office_camera_lights
            - light.office_microphone_light_blue
            - light.office_microphone_light_red
###############################################################################

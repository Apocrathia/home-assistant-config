---
### Nighttime Routines ###

homeassistant:
  customize:
    binary_sensor.in_bed:
      friendly_name: 'In Bed'

################################################################################
# Inputs
################################################################################
input_datetime:
  bedtime:
    name: Bedtime
    has_date: false
    has_time: true
    # initial: '21:00'
  last_call:
    name: Last Call
    has_date: false
    has_time: true

input_number:
  nighttime_delay:
    name: Night Time Delay
    icon: mdi:clock-in
    # initial: 60
    min: 0
    max: 120
    step: 15
    unit_of_measurement: Minutes

  nighttime_lighting_transition:
    name: Night Time Lighting Transition
    icon: mdi:clock-in
    # initial: 15
    min: 0
    max: 30
    step: 5
    unit_of_measurement: Minutes
################################################################################

sensor:
################################################################################
  - platform: template
    sensors:
      bedtime:
        friendly_name: Bedtime
        icon_template: mdi:clock-outline
        value_template: >
          {{ (states.input_datetime.bedtime.attributes.timestamp | int | 
              timestamp_custom("%H:%M",False)) }}
      nighttime_start:
        friendly_name: Night Time Start
        icon_template: mdi:clock-outline
        value_template: >
          {{ (((states.input_datetime.bedtime.attributes.timestamp | int) + 
              (states.input_number.nighttime_delay.state | int * 60)) | 
              timestamp_custom("%H:%M",False)) }}
      nighttime_lighting_transition:
        friendly_name: Night Time Lighting 
        icon_template: mdi:transition-masked
        unit_of_measurement: 'Seconds'
        value_template: >
          {{ ((states.input_number.nighttime_lighting_transition.state | 
              int) * 60) }}
      last_call:
        friendly_name: Last Call
        icon_template: mdi:clock-outline
        value_template: >
          {{ (states.input_datetime.last_call.attributes.timestamp | int | 
              timestamp_custom("%H:%M",False)) }}
      next_sunset:
        friendly_name: Next Sunset
        icon_template: mdi:weather-sunset-down
        value_template: >
          {{ (as_timestamp(states.sun.sun.attributes.next_dusk) | int | 
              timestamp_custom("%H:%M", True)) }}
################################################################################

binary_sensor:
################################################################################
  - platform: bayesian
    prior: 0.25
    name: 'in_bed'
    probability_threshold: 0.75
    observations:
      # No motion in the living room
      - entity_id: 'binary_sensor.living_room_motion'
        prob_given_true: 0.1
        prob_given_false: 0.4
        platform: 'state'
        to_state: 'off'
      # The sun is down
      - entity_id: 'sun.sun'
        prob_given_true: 0.3
        platform: 'state'
        to_state: 'below_horizon'
      # If both of the phones are plugged in
      - entity_id: sensor.ians_iphone_battery_state
        prob_given_true: 0.4
        platform: 'state'
        to_state: 'charging'
      - entity_id: sensor.aimees_iphone_battery_state
        prob_given_true: 0.4
        platform: 'state'
        to_state: 'charging'
      # If Away Mode is off (Meaning we're home)
      - entity_id: input_boolean.away_mode
        prob_given_true: 0.0
        platform: 'state'
        to_state: 'on'
      # Eventually, the correct answer is to put pressure sensors under the bed.
################################################################################

automation:
################################################################################
  - id: in_bed_bayesian_test
    alias: In Bed Bayesian Sensor Test
    trigger:
    - platform: state
      entity_id: binary_sensor.in_bed
      to: 'on'
    action:
    - service: notify.notify
      data:
        title: Bayesian In-Bed Test
        message: Hey, I think you're in bed right now, is that right?
################################################################################
  - id: routine_night_outdoor_lights
    alias: 'Routine - Night - Outdoor Lights'
    trigger:
      - platform: sun
        event: sunset
    condition:
      - condition: state
        entity_id: light.outdoor_lights
        state: 'off'
    action:
      - service: light.turn_on
        data:
          entity_id: light.outdoor_lights
          profile: relax
          brightness_pct: 50
        # data_template:
        #   transition: >
        #     {{ (states.sensor.nighttime_lighting_transition.state | int) }}
################################################################################
  - id: routine_night_night_lights
    alias: 'Routine - Night - Night Lights'
    trigger:
      - platform: sun
        event: sunset
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.away_mode
          state: 'off'
        - condition: state
          entity_id: light.night_lights
          state: 'off'
    action:
      - service: light.turn_on
        data:
          entity_id: light.night_lights
          profile: relax
          brightness_pct: 25
        data_template:
          transition: >
            {{ (states.sensor.nighttime_lighting_transition.state | int) }}
################################################################################
  - id: routine_night_master_bedroom_lights
    alias: 'Routine - Night - Master Bedroom Lights'
    trigger:
      - platform: sun
        event: sunset
  # Set this to 5 minutes after sundown to 'override' the previous automation
        offset: '00:05:00'
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.worknight
        state: 'on'
      - condition: state
        entity_id: light.master_bedroom_lights
        state: 'off'
    action:
      - service: light.turn_on
        data:
          entity_id: light.master_bedroom_lights
          brightness_pct: 100
        # data_template:
        #   transition: >
        #     {{ (states.sensor.nighttime_lighting_transition.state | int) }}
################################################################################
  - id: routine_night_bedtime
    alias: 'Routine - Night - Bedtime'
    trigger:
    - platform: template
      value_template: >
        {{ states.sensor.time.state == states.sensor.nighttime_start.state }}
    condition:
      condition: state
      entity_id: binary_sensor.worknight
      state: 'on'
    action:
      - service: light.turn_off
        data:
          entity_id: 
            - light.living_room_ceiling_fan
            - light.dining_room_chandelier
################################################################################
  - id: routine_night_last_call
    alias: "Routine - Night - Last Call"
    trigger:
      - platform: template
        value_template: >
          {{ states.sensor.time.state == states.sensor.last_call.state }}
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: binary_sensor.worknight
            state: 'on'
          - condition: state
            entity_id: light.master_bedroom_lights
            state:  'on'
      # will probably leverage bed occupancy sensor eventually
    action:
      - service: notify.alexa_media
        data:
          data:
            type: tts
          target: 
            - media_player.downstairs_thermostat
            - media_player.upstairs_thermostat
          message: 'Go the fuck to sleep!'
      - service: light.turn_off
        data:
          entity_id: light.master_bedroom_lights
      # Turn out the lights
      # https://www.youtube.com/watch?v=Udj-o2m39NA
################################################################################
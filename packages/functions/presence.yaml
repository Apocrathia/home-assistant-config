---
### Presence Detection Functionality ###

group:
  ################################################################################
  vacation:
    name: Vacation
    entities:
      - input_boolean.vacation_ian
  ################################################################################
  network_phones:
    name: Phones
    entities:
      - device_tracker.network_ians_iphone
  ################################################################################
  people:
    name: People
    entities:
      - person.ian
################################################################################

input_boolean:
  ################################################################################
  vacation_ian:
    name: 'Vacation - Ian'
    # initial: off
    icon: mdi:beach
  vacation_mode:
    name: 'Vacation Mode'
    # initial: off
    icon: mdi:beach
  away_ian:
    name: 'Away - Ian'
    # initial: off
    icon: mdi:walk
  away_mode:
    name: Away Mode
    # initial: off
    icon: mdi:walk
################################################################################

automation:
  ################################################################################
  # I realize the input boolean seems redundant, but I wanted a simply switch that
  # I could hit in case I wanted to activate an Away Mode.
  # There are two triggers here so that the
  - id: function_presence_detection
    alias: 'Function - Presence - Detection'
    trigger:
      - platform: state
        entity_id: group.people
        from: 'home'
        # Ensure this is > the iOS app location reporting interval.
        for: 00:05:00
      - platform: state
        entity_id: group.people
        to: 'home'
        # Keep this value lower to disable away mode quickly
        for: 00:01:30
    action:
      - alias: 'Set the away mode input boolean'
        service: >
          {% if is_state('group.people', 'home') %}
            input_boolean.turn_off
          {% elif is_state('group.people', 'not_home') %}
            input_boolean.turn_on
          {% endif %}
        entity_id: input_boolean.away_mode
  ################################################################################
  - id: function_presence_scripts
    alias: 'Function - Presence - Scripts'
    trigger:
      - platform: state
        entity_id: input_boolean.away_mode
    action:
      - alias: 'Execute the appropriate script'
        service: >
          {% if is_state('input_boolean.away_mode', 'on') %}
            script.location_away
          {% elif is_state('input_boolean.away_mode', 'off') %}
            script.location_home
          {% endif %}
  ################################################################################
  - id: function_vacation_ian
    alias: 'Function - Vacation - Ian'
    trigger:
      - platform: numeric_state
        entity_id: sensor.home_ian_distance
        above: 100
        below: 100
        # set this just in case we get a fluke proximity reading
        for: 01:00:00
    action:
      - service: >
          {% if states('sensor.home_ian_distance')|float < 100 %}
            input_boolean.turn_off
          {% elif states('sensor.home_ian_distance')|float > 100 %}
            input_boolean.turn_on
          {% endif %}
        data:
          entity_id: input_boolean.vacation_ian
  ################################################################################
  - id: function_vacation_detection
    alias: 'Function - Vacation - Detection'
    trigger:
      - platform: state
        entity_id: group.vacation
    action:
      - alias: 'Set the vacation mode input boolean'
        service: >
          {% if is_state('group.vacation', 'off') %}
            input_boolean.turn_off
          {% elif is_state('group.vacation', 'on') %}
            input_boolean.turn_on
          {% endif %}
        entity_id: input_boolean.vacation_mode
  ################################################################################
  - id: function_vacation_scripts
    alias: 'Function - Vacation - Scripts'
    trigger:
      - platform: state
        entity_id: input_boolean.vacation_mode
    action:
      - alias: 'Execute the appropriate script'
        service: >
          {% if is_state('input_boolean.vacation_mode', 'on') %}
            script.vacation_mode_on
          {% elif is_state('input_boolean.vacation_mode', 'off') %}
            script.vacation_mode_off
          {% endif %}
################################################################################
# Scripts
script:
  ################################################################################
  location_away:
    alias: 'Function - Presence - Away'
    sequence:
      - alias: 'Determine which actions to execute'
        choose:
          - conditions:
              - alias: 'The sun is down'
                condition: state
                entity_id: sun.sun
                state: 'below_horizon'
            sequence:
              - alias: 'Turn off evening lights'
                service: light.turn_off
                target:
                  entity_id: light.evening_lights
      # Execute the following every time
      # Turn off all of the lights
      - service: light.turn_off
        data:
          entity_id:
            - group.indoor_lights
      - service: switch.turn_off
        data:
          entity_id:
            - switch.garage_lights
      # Set the thermostats to away
      - service: climate.set_preset_mode
        data:
          entity_id:
            - climate.downstairs
            - climate.upstairs
          preset_mode: 'away'
      # Set the vacuums to turbo
      - service: vacuum.set_fan_speed
        data:
          entity_id:
            - vacuum.downstairs
            - vacuum.upstairs
          fan_speed: max
      # Start the vacuum
      - service: vacuum.start
        data:
          entity_id:
            - vacuum.downstairs
            - vacuum.upstairs
      # Arm the alarm
      - service: alarm_control_panel.alarm_arm_away
        data:
          entity_id: alarm_control_panel.home
          code: !secret alarm_code
      # Ensure the doors are locked
      - service: lock.lock
        data:
          entity_id:
            - lock.front_door_lock
            - lock.back_door_lock
      # Close the garage doors
      - service: cover.close_cover
        data:
          entity_id:
            - cover.main_garage_door
            - cover.second_garage_door
      # Turn up all of the fans
      - service: fan.set_percentage
        data:
          entity_id:
            - fan.living_room_ceiling_fan
            - fan.master_bedroom_ceiling_fan
            - fan.master_bedroom_air_purifier
          percentage: 100
      - service: switch.turn_off
        data:
          entity_id:
            - switch.fireplace
  ################################################################################
  location_home:
    alias: 'Function - Presence - Home'
    sequence:
      - alias: 'Determine which actions to execute'
        choose:
          - conditions:
              - alias: 'The sun is down'
                condition: state
                entity_id: sun.sun
                state: 'below_horizon'
            sequence:
              - alias: 'Turn on some lights'
                service: light.turn_on
                target:
                  entity_id:
                    - light.garage_hallway_light
                    - light.evening_lights
                data:
                  brightness_pct: 25
      # Execute the following every time
      # Disarm the alarm
      - service: alarm_control_panel.alarm_disarm
        data:
          entity_id: alarm_control_panel.home
          code: !secret alarm_code
      # Set the thermostat to home
      - service: climate.set_preset_mode
        data:
          entity_id:
            - climate.downstairs
            - climate.upstairs
          preset_mode: 'home'
      # Turn the fans back down
      - service: fan.set_percentage
        data:
          entity_id:
            - fan.living_room_ceiling_fan
            - fan.master_bedroom_ceiling_fan
            - fan.master_bedroom_air_purifier
          percentage: 33
      # Set the vacuums to silent
      - service: vacuum.set_fan_speed
        data:
          entity_id:
            - vacuum.downstairs
            - vacuum.upstairs
          fan_speed: low
      # Return vacuums to dock
      - service: vacuum.return_to_base
        data:
          entity_id:
            - vacuum.downstairs
            - vacuum.upstairs
  ################################################################################
  vacation_mode_on:
    alias: 'Function - Vacation - On'
    sequence:
      # Test Notificaton
      - service: notify.notify
        data:
          message: 'Vacation Script (On) Triggered'
  ################################################################################
  vacation_mode_off:
    alias: 'Function - Vacation - Off'
    sequence:
      # Test Notificaton
      - service: notify.notify
        data:
          message: 'Vacation Script (Off) Triggered'
################################################################################

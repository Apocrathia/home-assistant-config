---
### Presence Detection Functionality ###

group:
################################################################################
  vacation:
    name: Vacation
    entities:
      - input_boolean.vacation_ian
      - input_boolean.vacation_aimee
################################################################################
  network_phones:
    name: Phones
    entities:
      - device_tracker.network_aimees_iphone
      - device_tracker.network_ians_iphone
################################################################################
  people:
    name: People
    entities:
      - person.ian
      - person.aimee
################################################################################

# The Bayesian sensor has been a real bitch to wrap my head around.
# One extremely valuable resource has been robmarkcole's Jupityer notebook.
# http://nbviewer.jupyter.org/github/robmarkcole/HASS-data-science/blob/master/Bayesian%20sensor%20tutorial.ipynb

# binary_sensor:
# ################################################################################
#   - platform: bayesian
#     prior: 0.00 # The initial probability that the house is empty
#     name: 'Occupancy'
#     probability_threshold: 0.5
#     observations:
#       - entity_id: person.ian
#         prob_given_true: 1.0
#         prob_given_false: 0.0
#         platform: 'state'
#         to_state: 'home'
#       - entity_id: person.aimee
#         prob_given_true: 1.0
#         prob_given_false: 0.0
#         platform: 'state'
#         to_state: 'home'
# ################################################################################

# This will eventually be used for the vacation status
proximity:
################################################################################
  ian:
    zone: home
    devices:
      - person.ian
    tolerance: 5000
    unit_of_measurement: km
################################################################################
  aimee:
    zone: home
    devices:
      - person.aimee
    tolerance: 5000
    unit_of_measurement: km
################################################################################

sensor:
# and this is just because I'll find something funny to do with it.
################################################################################
  - platform: template
    sensors:
      distance_apart:
        friendly_name: 'Distance Apart'
        value_template: >-
          {{ distance('person.ian','person.aimee') }}
################################################################################

input_boolean:
################################################################################
  vacation_ian:
    name: 'Vacation - Ian'
    # initial: off
    icon: mdi:beach
  vacation_aimee:
    name: 'Vacation - Aimee'
    # initial: off
    icon: mdi:beach
  vacation_mode:
    name: 'Vacation Mode'
    # initial: off
    icon: mdi:beach
  away_mode:
    name: Away Mode
    # initial: off
    icon: mdi:walk
################################################################################

automation:
################################################################################
# I realize the input boolean seems redundant, but I wanted a simply switch that
# I could hit in case I wanted to activate an Away Mode, as well as something
# that could be accessed externally by Node-RED.
  - id: function_presence_detection
    alias: "Function - Presence - Detection"
    trigger:
      - platform: state
        entity_id: group.people
    action:
      service: >
        {% if is_state('group.people', 'home') %}
          input_boolean.turn_off
        {% elif is_state('group.people', 'not_home') %}
          input_boolean.turn_on
        {% endif %}
      entity_id: input_boolean.away_mode
################################################################################
### THIS NEEDS TO BE BROKEN INTO MULTIPLE AUTOMATIONS ###
  - id: function_presence_scripts
    alias: "Function - Presence - Scripts"
    trigger:
      - platform: state
        entity_id: input_boolean.away_mode
    action:
      service: >
        {% if is_state('input_boolean.away_mode', 'off') %}
          script.location_home
        {% elif is_state('input_boolean.away_mode', 'on') %}
          script.location_away
        {% endif %}
################################################################################
  - id: function_vacation_ian
    alias: "Function - Vacation - Ian"
    trigger:
      - platform: numeric_state
        entity_id: proximity.ian
        above: 100
        below: 100
        for: 01:00:00 # set this just in case we get a fluke proximity reading
    action:
      - choose:
        - conditions:
            - condition: numeric_state
              entity_id: proximity.ian
              below: 100
          sequence:
            - service: input_boolean.turn_off
              entity_id: input_boolean.vacation_ian
        - conditions:
            - condition: numeric_state
              entity_id: proximity.ian
              above: 100
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.vacation_ian
      # service: >
      #   # Going on vacation
      #   {% if trigger.to_state > 100 %}
      #       - service: input_boolean.turn_on
      #         data:
      #           entity_id: input_boolean.vacation_ian
      #       - service: notify.notify
      #         data_template:
      #           title: "Vacation Mode Triggered"
      #           message: >
      #             "{{ trigger.entity_id }} has turned {{ trigger.to_state }}."
      #   {% else %}
      #       - service: input_boolean.turn_off
      #         data:
      #           entity_id: input_boolean.vacation_ian
      #   {% endif %}
################################################################################
  - id: function_vacation_aimee
    alias: "Function - Vacation - Aimee"
    trigger:
      - platform: numeric_state
        entity_id: proximity.aimee
        above: 100
        below: 100
        # for: 01:00:00
    action:
      - choose:
        - conditions:
            - condition: numeric_state
              entity_id: proximity.aimee
              below: 100
          sequence:
            - service: input_boolean.turn_off
              entity_id: input_boolean.vacation_aimee
        - conditions:
            - condition: numeric_state
              entity_id: proximity.aimee
              above: 100
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.vacation_aimee
      # service: >
      #   # Going on vacation
      #   {% if trigger.to_state > 100 %}
      #       - service: input_boolean.turn_on
      #         data:
      #           entity_id: input_boolean.vacation_aimee
      #       - service: notify.notify
      #         data_template:
      #           title: "Vacation Mode Triggered"
      #           message: >
      #             "{{ trigger.entity_id }} has turned {{ trigger.to_state }}."
      #   {% else %}
      #       - service: input_boolean.turn_off
      #         data:
      #           entity_id: input_boolean.vacation_aimee
      #   {% endif %}
################################################################################
  - id: function_vacation_detection
    alias: "Function - Vacation - Detection"
    trigger:
      - platform: state
        entity_id: group.vacation
    action:
      - choose:
        - conditions:
            - condition: state
              entity_id: group.vacation
              state: "off"
          sequence:
            - service: input_boolean.turn_off
              entity_id: input_boolean.vacation_mode
        - conditions:
            - condition: state
              entity_id: group.vacation
              state: "on"
          sequence:
            - service: input_boolean.turn_on
              entity_id: input_boolean.vacation_mode
      # service: >
      #   {% if is_state('group.vacation', 'off') %}
      #     input_boolean.turn_off
      #   {% elif is_state('group.vacation', 'on') %}
      #     input_boolean.turn_on
      #   {% endif %}
      # entity_id: input_boolean.vacation_mode
################################################################################
  - id: function_vacation_scripts
    alias: "Function - Vacation - Scripts"
    trigger:
      - platform: state
        entity_id: input_boolean.vacation_mode
    action:
      - choose:
        - conditions:
            - condition: state
              entity_id: input_boolean.vacation_mode
              state: "off"
          sequence:
            - service: script.vacation_mode_off
        - conditions:
            - condition: state
              entity_id: input_boolean.vacation_mode
              state: "on"
          sequence:
            - service: script.vacation_mode_on
      # service: >
      #   {% if is_state('input_boolean.vacation_mode', 'off') %}
      #     script.vacation_mode_on
      #   {% elif is_state('input_boolean.vacation_mode', 'on') %}
      #     script.vacation_mode_off
      #   {% endif %}
################################################################################

# Scripts
script:
################################################################################
  location_away:
    alias: 'Function - Presence - Away'
    sequence:
      # Turn off all of the lights
    - service: light.turn_off
      data:
        entity_id: group.indoor_lights
      # Set the thermostats to away
    - service: climate.set_preset_mode
      data:
        entity_id: 
          - climate.homekit_downstairs
          - climate.homekit_upstairs
        preset_mode: 'away'
      # Set the vacuums to turbo
    - service: vacuum.set_fan_speed
      data:
        entity_id:
          - vacuum.downstairs_vacuum
          - vacuum.upstairs_vacuum
        fan_speed: max
      # Start the vacuum
    - service: vacuum.start
      data:
        entity_id: 
          - vacuum.downstairs_vacuum
          - vacuum.upstairs_vacuum
      # Arm the alarm
    - service: alarm_control_panel.alarm_arm_away
      data:
        entity_id: alarm_control_panel.home
        code: !secret alarm_code
      # Ensure the doors are locked
    - service: lock.lock
      data:
        entity_id: group.all_locks
      # Close the garage doors
    - service: cover.close_cover
      data:
        entity_id:
          - cover.garage_door_01
          - cover.garage_door_02
    # Turn up the air purifiers while we're gone
    - service: xiaomi_miio.fan_set_fan_level
      data:
        entity_id: 
          - fan.master_bedroom_air_purifier
          # - fan.master_bedroom_humidifier
        level: 3
    # - service: scene.turn_on
    #   data:
    #     entity_id: scene.away
      # Lights will now be randomly turned on and off
      # and is triggered by input_boolean.away_mode
################################################################################
  location_home:
    alias: 'Function - Presence - Home'
    sequence:
      # Disarm the alarm
    - service: alarm_control_panel.alarm_disarm
      data:
        entity_id: alarm_control_panel.home
        code: !secret alarm_code
      # Set the thermostat to home
    - service: climate.set_preset_mode
      data:
        entity_id: 
          - climate.homekit_downstairs
          - climate.homekit_upstairs
        preset_mode: 'home'
      # Set the vacuums to silent
    - service: vacuum.set_fan_speed
      data:
        entity_id:
          - vacuum.downstairs_vacuum
          - vacuum.upstairs_vacuum
        fan_speed: min
      # Stop the vacuums
    - service: vacuum.stop
      data:
        entity_id:
          - vacuum.downstairs_vacuum
          - vacuum.upstairs_vacuum
      # wait 30 seconds for command to take effect
    - delay:
        seconds: 30
      # Return vacuums to dock
    - service: vacuum.return_to_base
      data:
        entity_id: 
          - vacuum.downstairs_vacuum
          - vacuum.upstairs_vacuum
    # Turn the air purifiers back down
    - service: fan.set_speed
      data:
        entity_id:
          - fan.master_bedroom_air_purifier
          # - fan.master_bedroom_humidifier
        speed: silent
      # Turn on some lights
    # - service: scene.turn_on
    #   data:
    #     entity_id: scene.home
################################################################################
  vacation_mode_on:
    alias: 'Function - Vacation - On'
    sequence:
      # Test Notificaton
    - service: notify.notify
      data_template:
        title: "Vacation Script (On) Triggered"
################################################################################
  vacation_mode_off:
    alias: 'Function - Vacation - Off'
    sequence:
      # Test Notificaton
    - service: notify.notify
      data_template:
        title: "Vacation Script (Off) Triggered"
################################################################################

# Scenes
scene:
################################################################################
  - name: Home
    entities:
      light.dining_room_chandelier:
        state: 'on'
        brightness: 100
      light.kitchen_chandelier:
        state: 'on'
        brightness: 100
      light.sitting_room_floor_lamp:
        state: 'on'
        brightness: 100
################################################################################
  - name: Away
    entities:
      light.dining_room_chandelier:
        state: 'off'
      light.kitchen_chandelier:
        state: 'off'
      light.sitting_room_floor_lamp:
        state: 'off'
      light.master_bedroom_table_lamps:
        state: 'off'
################################################################################
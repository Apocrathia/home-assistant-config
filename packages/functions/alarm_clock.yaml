---
################################################################################
# Alarm Clock
################################################################################

# A lot of this package has come from the following thread:
# https://community.home-assistant.io/t/creating-a-alarm-clock/410/315

### Inputs ###
input_datetime:
  wakeup_time:
    name: Wakeup Time
    has_date: false
    has_time: true
    # initial: 05:00

input_number:
  wakeup_duration:
    name: Wakeup Duration
    icon: mdi:clock-in
    # initial: 30
    min: 0
    max: 60
    step: 5
    unit_of_measurement: Minutes

input_select:
  alarm_type:
    name: Alarm Type
    options:
      - Plex
      - News
      - Music
    # initial: Plex
    icon: mdi:alarm

### Sensors ###
sensor:
  - platform: template
    sensors:
      wakeup_time:
        friendly_name: Wakeup Time
        # entity_id: input_datetime.wakeup_time
        value_template: >
          {{ (states.input_datetime.wakeup_time.attributes.timestamp |
              int | timestamp_custom("%H:%M",False)) }}
      wakeup_alarm_start_time:
        # entity_id: input_datetime.wakeup_time, input_number.wakeup_duration
        friendly_name: Alarm Clock Start
        value_template: >
          {{ (((states.input_datetime.wakeup_time.attributes.timestamp |
              int) - (states.input_number.wakeup_duration.state | int * 60)) |
              timestamp_custom("%H:%M",False)) }}
      wakeup_alarm_midpoint:
        # entity_id: input_datetime.wakeup_time, input_number.wakeup_duration
        friendly_name: Alarm Clock Midpoint
        value_template: >
          {{ (((states.input_datetime.wakeup_time.attributes.timestamp |
              int) - ((states.input_number.wakeup_duration.state |
              int * 60)/2 )) | timestamp_custom("%H:%M",False)) }}

automation:
  ################################################################################
  - id: function_wakeup_bedroom_light
    alias: 'Function - Wakeup - Bedroom Light'
    trigger:
      - platform: template
        value_template: >
          {{ (states.sensor.time.state ==
              states.sensor.wakeup_alarm_start_time.state) }}
      - platform: time
        at: input_datetime.wakeup_time
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.workday
          state: 'on'
        - condition: state
          entity_id: sun.sun
          state: below_horizon
        - condition: state
          entity_id: group.people
          state: home
    action:
      - service: light.turn_on
        data:
          entity_id: light.master_bedroom_floor_lamp
          profile: energize
          brightness_pct: 100
        data_template:
          transition: >
            {{ states.input_number.wakeup_duration.state | multiply(60) | int }}
      - service: script.light_transition
        data:
          entity_id: light.master_bedroom_table_lamps
          starting_brightness_pct: 10
          ending_brightness_pct: 100
          interval_pct: 10
          transition_time: >
            {{ states.input_number.wakeup_duration.state | multiply(60) | int }}
  ################################################################################
  - id: function_wakeup_apple_tv
    alias: 'Function - Wakeup - Apple TV'
    trigger:
      - platform: template
        value_template: >
          {{ (states.sensor.time.state ==
              states.sensor.wakeup_alarm_midpoint.state) }}
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.workday
          state: 'on'
    action:
      service: script.function_alarm_clock
  ################################################################################
  - id: function_wakeup_vacuum
    alias: 'Function - Wakeup - Vacuum'
    trigger:
      - platform: time
        at: input_datetime.wakeup_time
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.workday
          state: 'on'
    action:
      - service: vacuum.start
        data:
          entity_id:
            - vacuum.downstairs
            - vacuum.upstairs
################################################################################

script:
  ################################################################################
  function_wakeup_apple_tv:
    alias: 'Function - Wakeup - Apple TV'
    sequence:
      # Device wakeup
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - menu
      - delay:
          seconds: 15
      # Go to the home menu
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - top_menu
      - delay:
          seconds: 1
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - top_menu
      - delay:
          seconds: 1
      # Now figure out what we're doing
      - choose:
          ############
          ### Plex ###
          ############
          - conditions:
              - condition: state
                entity_id: input_select.alarm_type
                state: 'Plex'
            sequence:
              # Should be sitting on the first menu item (Plex)
              # Open Plex
              - service: remote.send_command
                data:
                  entity_id: remote.master_bedroom_apple_tv
                  command:
                    - select
              - delay:
                  seconds: 15
              # Select Apocrathia user account
              - service: remote.send_command
                data:
                  entity_id: remote.master_bedroom_apple_tv
                  command:
                    - select
              - delay:
                  seconds: 5
              # Go to news
              - service: remote.send_command
                data:
                  entity_id: remote.master_bedroom_apple_tv
                  delay_secs: 0.75
                  command:
                    - right
                    - down
                    - down
                    - down
                    - down
                    - down
                    - down
                    - select
          ############
          ### News ###
          ############
          - conditions:
              - condition: state
                entity_id: input_select.alarm_type
                state: 'News'
            sequence:
              # TODO
              - delay: 00:00:00
          #############
          ### Music ###
          #############
          - conditions:
              - condition: state
                entity_id: input_select.alarm_type
                state: 'Music'
            sequence:
              - service: remote.send_command
                data:
                  entity_id: remote.master_bedroom_apple_tv
                  command:
                    # Move down one (Music)
                    - down
                    # Open Music
                    - select
              - delay:
                  seconds: 15
              - service: remote.send_command
                data:
                  entity_id: remote.master_bedroom_apple_tv
                  command:
                    # Move to first item
                    - down
                    # Play
                    - select
################################################################################

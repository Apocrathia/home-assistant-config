---
################################################################################
# Alarm Clock
################################################################################

# A lot of this package has come from the following thread:
# https://community.home-assistant.io/t/creating-a-alarm-clock/410/315

### Inputs ###
input_datetime:
  wakeup_time:
    name: Wakeup Time
    has_date: false
    has_time: true
    # initial: 05:00

input_number:
  wakeup_duration:
    name: Wakeup Duration
    icon: mdi:clock-in
    # initial: 30
    min: 0
    max: 60
    step: 5
    unit_of_measurement: Minutes

input_select:
  alarm_type:
    name: Alarm Type
    options:
      - Plex
      - Local News
    # initial: Plex
    icon: mdi:alarm

### Sensors ###
sensor:
  - platform: template
    sensors:
      wakeup_time:
        friendly_name: Wakeup Time
        # entity_id: input_datetime.wakeup_time
        value_template: >
          {{ (states.input_datetime.wakeup_time.attributes.timestamp | 
              int | timestamp_custom("%H:%M",False)) }}
      wakeup_alarm_start_time:
        # entity_id: input_datetime.wakeup_time, input_number.wakeup_duration
        friendly_name: Alarm Clock Start
        value_template: >
          {{ (((states.input_datetime.wakeup_time.attributes.timestamp | 
              int) - (states.input_number.wakeup_duration.state | int * 60)) | 
              timestamp_custom("%H:%M",False)) }}
      wakeup_alarm_midpoint:
        # entity_id: input_datetime.wakeup_time, input_number.wakeup_duration
        friendly_name: Alarm Clock Midpoint
        value_template: >
          {{ (((states.input_datetime.wakeup_time.attributes.timestamp | 
              int) - ((states.input_number.wakeup_duration.state | 
              int * 60)/2 )) | timestamp_custom("%H:%M",False)) }}

automation:
################################################################################
  - id: function_wakeup_bedroom_light
    alias: 'Function - Wakeup - Bedroom Light'
    trigger:
    - platform: template
      value_template: >
        {{ (states.sensor.time.state == 
            states.sensor.wakeup_alarm_start_time.state) }}
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.workday
          state: 'on'
        - condition: state
          entity_id: sun.sun
          state: below_horizon
    action:
    - service: light.turn_on
      data:
        entity_id: light.master_bedroom_floor_lamp
        profile: energize
        brightness_pct: 100
      data_template:
        transition: >
          {{ states.input_number.wakeup_duration.state | multiply(60) | int }}
    - delay:
        seconds: >
          {{ states.input_number.wakeup_duration.state | multiply(60) | int }}
    - service: light.turn_on
      data:
        entity_id: light.master_bedroom_table_lamps
        brightness_pct: 100
################################################################################

################################################################################
  - id: function_wakeup_apple_tv
    alias: 'Function - Wakeup - Apple TV'
    trigger:
    - platform: template
      value_template: >
        {{ (states.sensor.time.state == 
            states.sensor.wakeup_alarm_midpoint.state) }}
    condition:
        condition: and
        conditions:
          - condition: state
            entity_id: input_select.alarm_type
            state: 'Plex'
          - condition: state
            entity_id: binary_sensor.workday
            state: 'on'
    action:
      service: script.function_wakeup_plex
################################################################################

# Currently a stub, will eventually work with an HDHomeRun or IPTV
################################################################################
  - id: function_wakeup_local_news
    alias: 'Function - Wakeup - Local News'
    trigger:
    - platform: template
      value_template: >
        {{ (states.sensor.time.state == 
            states.sensor.wakeup_alarm_midpoint.state) }}
    condition:
        condition: and
        conditions:
          - condition: state
            entity_id: input_select.alarm_type
            state: 'Local News'
          - condition: state
            entity_id: binary_sensor.workday
            state: 'on'
    action:
      service: script.function_wakeup_local_news
################################################################################

script:
################################################################################
  function_wakeup_plex:
    alias: 'Wakeup - Plex'
    sequence:
  # Device wakeup
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - menu
      - delay:
          seconds: 15
  # Go to the home menu
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - top_menu
      - delay:
          seconds: 1
  ### Note: I have no idea if volume control will ever work. This is mainly a note. ###
  # Set Volume to 0 (By spamming volume down > 20x)
  #    - service: remote.send_command
  #      data:
  #        entity_id: remote.master_bedroom_apple_tv
  #        command:
  #          - volume_down
  #        repeat:
  #          times: 2
  # Raise Volume to ~20
  # Go to the home menu (again, just in case the first one didn't work.)
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - top_menu
      - delay:
          seconds: 1
  # Go to the first menu item (Plex)
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - top_menu
  # Open Plex
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - select
      - delay:
          seconds: 15
  # Select Apocrathia user account
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - select
      - delay:
          seconds: 5
  # Go to news
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - down
            - down
            - down
            - down
            - down
            - select
            - select
      - delay:
          seconds: 5
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - select
      - delay:
          seconds: 5
  # Fullscreen
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - select
################################################################################

# TODO Update for HDHomeRun or IPTV
################################################################################
  function_wakeup_local_news:
    alias: 'Wakeup - Local News'
    sequence:
  # Device wakeup
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - menu
      - delay:
          seconds: 15
  # Go to the home menu
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - top_menu
      - delay:
          seconds: 1
  ### Note: I have no idea if volume control will ever work. This is mainly a note. ###
  # Set Volume to 0 (By spamming volume down > 20x)
  #    - service: remote.send_command
  #      data:
  #        entity_id: remote.master_bedroom_apple_tv
  #        command:
  #          - volume_down
  #        repeat:
  #          times: 2
  # Raise Volume to ~20
  # Go to the home menu (again, just in case the first one didn't work.)
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - top_menu
      - delay:
          seconds: 1
  # Go to the first menu item (Plex)
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - top_menu
  # Open Plex
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - select
      - delay:
          seconds: 15
  # Select Apocrathia user account
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - select
      - delay:
          seconds: 5
  # Go to news
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - down
            - down
            - down
            - down
            - down
            - down
            - select
            - select
      - delay:
          seconds: 5
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - select
      - delay:
          seconds: 5
  # Fullscreen
      - service: remote.send_command
        data:
          entity_id: remote.master_bedroom_apple_tv
          command:
            - select
################################################################################
